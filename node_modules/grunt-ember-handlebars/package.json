{
  "name": "grunt-ember-handlebars",
  "description": "Precompile ember templates in grunt using only ember-template-compiler.js.",
  "version": "0.7.0",
  "homepage": "https://github.com/yaymukund/grunt-ember-handlebars",
  "author": {
    "name": "Mukund Lakshman",
    "email": "yaymukund@gmail.com",
    "url": "http://yaymukund.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/yaymukund/grunt-ember-handlebars.git"
  },
  "bugs": {
    "url": "https://github.com/yaymukund/grunt-ember-handlebars/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/yaymukund/grunt-ember-handlebars/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-ember-handlebars": "bin/grunt-ember-handlebars"
  },
  "engines": {
    "node": ">= 0.6.x"
  },
  "scripts": {
    "test": "grunt simplemocha"
  },
  "dependencies": {
    "grunt": "~0.4.x",
    "grunt-lib-contrib": "~0.5.1"
  },
  "devDependencies": {
    "mocha": "1.9.x",
    "grunt-simple-mocha": "0.4.x",
    "should": "1.2.x",
    "jsdom": "0.6.x"
  },
  "keywords": [
    "gruntplugin",
    "ember",
    "handlebars",
    "templates",
    "precompile"
  ],
  "readme": "# grunt-ember-handlebars \n\nPrecompile ember templates in grunt using only ember-template-compiler.js.\n\n### [Updating Guide](https://github.com/yaymukund/grunt-ember-handlebars/wiki/Updating-Guide)\n\n## Getting Started\nIf you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a [gruntfile][Getting Started] as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n\n```shell\nnpm install grunt-ember-handlebars --save-dev\n```\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/wiki/Getting-started\n\n\n## Handlebars task\n_Run this task with the `grunt ember_handlebars` command._\n\n_This task is a [multi task][] so any targets, files and options should be specified according to the [multi task][] documentation._\n[multi task]: https://github.com/gruntjs/grunt/wiki/Configuring-tasks\n\n\n_Version `0.3.x` of this plugin is compatible with Grunt `0.4.x`. Version `0.1.x` of this plugin is compatible with Grunt `0.3.x`._\n\n### Options\n\n#### separator\nType: `String`\nDefault: linefeed + linefeed\n\nConcatenated files will be joined on this string.\n\n#### namespace\nType: `String`\nDefault: 'Ember.TEMPLATES'\n\nThe namespace in which the precompiled templates will be assigned.  *Use dot notation (e.g. App.Templates) for nested namespaces.*\n\nExample:\n```js\noptions: {\n  namespace: 'MyApp.Templates'\n}\n```\n\n#### wrapped\nType: `Boolean`\nDefault: `true`\n\nDetermine if preprocessed template functions will be wrapped in Ember.Handlebars.template function.\n\n#### processName\nType: `function`\n\nThis option accepts a function which takes one argument (the template filepath) and returns a string which will be used as the key for the precompiled template object.  The example below stores all templates on the default Ember.TEMPLATES namespace in capital letters.\n\n```js\noptions: {\n  processName: function(filename) {\n    return filename.toUpperCase();\n  }\n}\n```\n\n#### processPartialName\nType: ```function```\n\nThis option accepts a function which takes one argument (the partial filepath) and returns a string which will be used as the key for the precompiled partial object when it is registered in Handlebars.partials. The example below stores all partials using only the actual filename instead of the full path.\n\n```js\noptions: {\n  processPartialName: function(filePath) { // input:  templates/_header.hbs\n    var pieces = filePath.split(\"/\");\n    return pieces[pieces.length - 1]; // output: _header.hbs\n  }\n}\n````\n\nNote: If processPartialName is not provided as an option the default assumes that partials will be stored by stripping trailing underscore characters and filename extensions. For example, the path *templates/_header.hbs* will become *header* and can be referenced in other templates as *{{> header}}*.\n\n#### partialRegex\nType: `Regexp`\nDefault: /^_/\n\nThis option accepts a regex that defines the prefix character that is used to identify Handlebars partial files.\n\n``` javascript\n// assumes partial files would be prefixed with \"par_\" ie: \"par_header.hbs\"\noptions: {\n  partialRegex: /^par_/\n}\n```\n\n### Usage Examples\n\n```js\nember_handlebars: {\n  compile: {\n    options: {\n      namespace: \"MyApp.TEMPLATES\"\n    },\n    files: {\n      \"path/to/result.js\": \"path/to/source.hbs\",\n      \"path/to/another.js\": [\"path/to/sources/*.hbs\", \"path/to/more/*.hbs\"]\n    }\n  }\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding\nstyle.\n\n## Release History\n\n* v0.7.0 - Update Handlebars to v1.0.0. Don't strip leading underscores from\n           partial names.\n* v0.6.0 - Use ember-template-precompiler, update Handlebars to 1.0.0-rc.4.\n* v0.5.0 - Drop support for registerPartial in favor of Ember.TEMPLATES.\n* v0.4.0 - Now requires handlebars-1.0-rc.3 and ember-1.0.0-rc.1.\n* v0.3.0 - Copy the grunt-contrib interface, which is much nicer.\n* v0.2.1 - Change utils to util. D'oh!\n* v0.2.0 - Make ember-handlebars use grunt 0.4.x.\n* v0.1.7 - Updated ember.js used for testing, ensure that tests continue\n           working with new view context handling.\n* v0.1.6 - Stopped using helpers, which will get removed in grunt 0.4.\n* v0.1.4 - Updated ember.js library we're using, since it looks like\n           precompilation has been updated.\n* v0.1.0 - Woo!\n\n## License\nCopyright (c) 2012 Mukund Lakshman\n\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-ember-handlebars@0.7.0",
  "_from": "grunt-ember-handlebars@~0.7.0"
}
